{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { Context } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const {\n    setUsername,\n    setPassword,\n    setLoggedIn\n  } = useContext(Context);\n  const [usernameGiven, setUsernameGiven] = useState(\"\");\n  const [passwordGiven, setPasswordGiven] = useState(\"\");\n  const [invalidLogin, setInvalidLogin] = useState(false);\n  const navigate = useNavigate();\n\n  function login() {\n    Axios.post('/api/user/authenticate', {\n      usernameGiven,\n      passwordGiven\n    }).then(response => {\n      if (response) {\n        setLoggedIn(true);\n        setUsername(usernameGiven);\n        setPassword(passwordGiven);\n      }\n    }).then(response => {\n      navigate('/');\n    }).catch(error => {\n      console.log(error);\n      setInvalidLogin(true);\n    });\n  }\n\n  function InvalidMessage() {\n    if (invalidLogin) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Invalid Username or Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InvalidMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: usernameGiven,\n      onChange: e => setUsernameGiven(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: passwordGiven,\n      onChange: e => setPasswordGiven(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"hvrdAtlwY5ex7XKGiy8D+EoqhPo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/Login.jsx"],"names":["React","useState","useContext","Axios","useNavigate","Context","Login","props","setUsername","setPassword","setLoggedIn","usernameGiven","setUsernameGiven","passwordGiven","setPasswordGiven","invalidLogin","setInvalidLogin","navigate","login","post","then","response","catch","error","console","log","InvalidMessage","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,cAA1B;AACA,SAAQC,OAAR,QAAsB,QAAtB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEjC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,MAA0CR,UAAU,CAACG,OAAD,CAA1D;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMgB,QAAQ,GAAGb,WAAW,EAA5B;;AAGA,WAASc,KAAT,GAAiB;AACbf,IAAAA,KAAK,CAACgB,IAAN,CAAW,wBAAX,EAAqC;AAACR,MAAAA,aAAD;AAAgBE,MAAAA;AAAhB,KAArC,EACKO,IADL,CACUC,QAAQ,IAAI;AACV,UAAIA,QAAJ,EAAc;AACVX,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,QAAAA,WAAW,CAACG,aAAD,CAAX;AACAF,QAAAA,WAAW,CAACI,aAAD,CAAX;AACH;AACJ,KAPT,EASKO,IATL,CASUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAXL,EAYKK,KAZL,CAYWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAfL;AAgBH;;AAED,WAASU,cAAT,GAA0B;AACtB,QAAIX,YAAJ,EAAkB;AACd,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAO,MAAA,KAAK,EAAEJ,aAAd;AAA6B,MAAA,QAAQ,EAAEgB,CAAC,IAAIf,gBAAgB,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5D;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAEhB,aAA9B;AAA6C,MAAA,QAAQ,EAAEc,CAAC,IAAIb,gBAAgB,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5E;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAQ,MAAA,OAAO,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAtDuBZ,K;UAMHF,W;;;KANGE,K","sourcesContent":["import React, {useState, useContext} from 'react';\nimport Axios from 'axios';\nimport {useNavigate} from 'react-router';\nimport {Context} from \"../App\";\n\nexport default function Login(props) {\n\n    const {setUsername, setPassword, setLoggedIn} = useContext(Context);\n    const [usernameGiven, setUsernameGiven] = useState(\"\");\n    const [passwordGiven, setPasswordGiven] = useState(\"\");\n    const [invalidLogin, setInvalidLogin] = useState(false);\n    const navigate = useNavigate();\n\n\n    function login() {\n        Axios.post('/api/user/authenticate', {usernameGiven, passwordGiven})\n            .then(response => {\n                    if (response) {\n                        setLoggedIn(true);\n                        setUsername(usernameGiven);\n                        setPassword(passwordGiven)\n                    }\n                }\n            )\n            .then(response => {\n                navigate('/');\n            })\n            .catch(error => {\n                console.log(error);\n                setInvalidLogin(true);\n            });\n    }\n\n    function InvalidMessage() {\n        if (invalidLogin) {\n            return <div>Invalid Username or Password</div>\n        }\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <InvalidMessage/>\n            <h5>\n                Username\n            </h5>\n            <input value={usernameGiven} onChange={e => setUsernameGiven(e.target.value)}/>\n            <h5>\n                Password\n            </h5>\n            <input type='password' value={passwordGiven} onChange={e => setPasswordGiven(e.target.value)}/>\n            <button onClick={login}>\n                Login\n            </button>\n        </div>\n\n    )\n\n\n} "]},"metadata":{},"sourceType":"module"}