{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { Context } from \"../App.jsx\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieEntry(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    username,\n    setUsername,\n    loggedIn,\n    setLoggedIn\n  } = useContext(Context);\n  const [movie, setMovie] = useState(undefined);\n  const [reviewText, setReviewText] = useState('');\n  const [curMovieTitle, setCurMovieTitle] = useState('');\n  const [reviewSet, setReviewSet] = useState([]);\n  const params = useParams();\n\n  function getReviews() {\n    Axios.get('/api/reviews/getByMovie/' + curMovieTitle).then(function (response) {\n      setReviewSet(response.data);\n      console.log(response.data);\n    });\n  }\n\n  function addNewReview() {\n    // if (loggedIn) {\n    Axios.post('/api/reviews', {\n      reviewText,\n      username,\n      curMovieTitle\n    }).then(response => {\n      console.log(\"Added review\");\n      console.log(response.data);\n      navigate('/movie/movieID/' + movie.movieId);\n    }).catch(error => console.log(error)); // } else {\n    //     console.log(\"User must be logged in to submit review\");\n    // }\n  }\n\n  useEffect(() => {\n    Axios.get('/api/movies/movieID/' + params.movieId).then(function (response) {\n      setMovie(response.data);\n      setCurMovieTitle(response.data.movieTitle);\n      console.log(\"user status \" + loggedIn);\n    });\n  }, []);\n  useEffect(getReviews, []);\n  const reviewComponent = [];\n\n  for (let review of reviewSet) {\n    reviewComponent.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: review.reviewText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this));\n  }\n\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Movie loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Movie Image will be displayed here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Movie Title: \", movie.movieTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Director: \", movie.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Release Date: \", movie.releaseDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Description: \", movie.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Movie Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: reviewText,\n            onChange: e => setReviewText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewReview,\n            children: \"Submit Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), reviewComponent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieEntry, \"jiE73fWxYR53czo2Lo3+egiJkKk=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = MovieEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieEntry\");","map":{"version":3,"sources":["/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx"],"names":["Axios","React","useState","useEffect","useContext","useParams","useNavigate","Context","Card","CardContent","Typography","MovieEntry","props","navigate","username","setUsername","loggedIn","setLoggedIn","movie","setMovie","undefined","reviewText","setReviewText","curMovieTitle","setCurMovieTitle","reviewSet","setReviewSet","params","getReviews","get","then","response","data","console","log","addNewReview","post","movieId","catch","error","movieTitle","reviewComponent","review","push","director","releaseDate","description","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEtC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAACQ,IAAAA,QAAD;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA;AAAlC,MAAiDb,UAAU,CAACG,OAAD,CAAjE;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACkB,SAAD,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMyB,MAAM,GAAGtB,SAAS,EAAxB;;AAEA,WAASuB,UAAT,GAAsB;AAClB5B,IAAAA,KAAK,CAAC6B,GAAN,CAAU,6BAA6BN,aAAvC,EACKO,IADL,CACU,UAAUC,QAAV,EAAoB;AACtBL,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACH,KAJL;AAKH;;AAED,WAASG,YAAT,GAAwB;AACpB;AACInC,IAAAA,KAAK,CAACoC,IAAN,CAAW,cAAX,EAA2B;AAACf,MAAAA,UAAD;AAAaP,MAAAA,QAAb;AAAuBS,MAAAA;AAAvB,KAA3B,EACKO,IADL,CACUC,QAAQ,IAAI;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACAnB,MAAAA,QAAQ,CAAC,oBAAoBK,KAAK,CAACmB,OAA3B,CAAR;AACH,KALL,EAMKC,KANL,CAMWC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CANpB,EAFgB,CASpB;AACA;AACA;AACH;;AAEDpC,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,KAAK,CAAC6B,GAAN,CAAU,yBAAyBF,MAAM,CAACU,OAA1C,EACKP,IADL,CACU,UAASC,QAAT,EAAmB;AACzBZ,MAAAA,QAAQ,CAACY,QAAQ,CAACC,IAAV,CAAR;AACAR,MAAAA,gBAAgB,CAACO,QAAQ,CAACC,IAAT,CAAcQ,UAAf,CAAhB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBlB,QAA7B;AACC,KALL;AAMH,GAPQ,EAOP,EAPO,CAAT;AAQAb,EAAAA,SAAS,CAACyB,UAAD,EAAa,EAAb,CAAT;AAEA,QAAMa,eAAe,GAAG,EAAxB;;AACA,OAAK,IAAIC,MAAT,IAAmBjB,SAAnB,EAA8B;AAC1BgB,IAAAA,eAAe,CAACE,IAAhB,eACA;AAAA,6BAEI;AAAA,kBAAID,MAAM,CAACrB;AAAX;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADA;AAOH;;AAED,MAAI,CAACH,KAAL,EAAY;AACR,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAGH;;AAED,sBACI,QAAC,IAAD;AAAA,2BACA,QAAC,WAAD;AAAA,6BACI,QAAC,UAAD;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,wCACkBA,KAAK,CAACsB,UADxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAA,qCACetB,KAAK,CAAC0B,QADrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAA,yCACmB1B,KAAK,CAAC2B,WADzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI;AAAA,wCACkB3B,KAAK,CAAC4B,WADxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAmBI;AAAO,YAAA,KAAK,EAAEzB,UAAd;AAA0B,YAAA,QAAQ,EAAE0B,CAAC,IAAIzB,aAAa,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eAoBI;AAAA;AAAA;AAAA;AAAA,kBApBJ,eAqBI;AAAQ,YAAA,OAAO,EAAEd,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ,eAwBI;AAAA;AAAA;AAAA;AAAA,kBAxBJ,EAyBKM,eAzBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GA/FuB9B,U;UAEHL,W,EAOFD,S;;;KATKM,U","sourcesContent":["import Axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { Context } from \"../App.jsx\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\n\nexport default function MovieEntry(props) {\n\n    const navigate = useNavigate();\n    const {username, setUsername, loggedIn, setLoggedIn} = useContext(Context);\n    const [movie, setMovie] = useState(undefined);\n    const [reviewText, setReviewText] = useState('');\n    const [curMovieTitle, setCurMovieTitle] = useState('');\n    const [reviewSet, setReviewSet] = useState([]);\n\n    const params = useParams();\n\n    function getReviews() {\n        Axios.get('/api/reviews/getByMovie/' + curMovieTitle)\n            .then(function (response) {\n                setReviewSet(response.data);\n                console.log(response.data);\n            })\n    }\n\n    function addNewReview() {\n        // if (loggedIn) {\n            Axios.post('/api/reviews', {reviewText, username, curMovieTitle})\n                .then(response => {\n                    console.log(\"Added review\");\n                    console.log(response.data);\n                    navigate('/movie/movieID/' + movie.movieId);\n                })\n                .catch(error => console.log(error));\n        // } else {\n        //     console.log(\"User must be logged in to submit review\");\n        // }\n    }\n\n    useEffect(() => {\n        Axios.get('/api/movies/movieID/' + params.movieId)\n            .then(function(response) {\n            setMovie(response.data);\n            setCurMovieTitle(response.data.movieTitle);\n            console.log(\"user status \" + loggedIn);\n            })\n    },[]);\n    useEffect(getReviews, []);\n\n    const reviewComponent = [];\n    for (let review of reviewSet) {\n        reviewComponent.push(\n        <div>\n            {/* <p>Reviewer: {review.owner}</p> */}\n            <p>{review.reviewText}</p>\n        </div>\n        )\n\n    }\n\n    if (!movie) {\n        return (<div>\n            Movie loading...\n        </div>)\n    }\n\n    return (\n        <Card>\n        <CardContent>\n            <Typography >\n                <div>\n                    <h2>\n                        Movie Image will be displayed here\n                    </h2>\n                    <h1>\n                        Movie Title: {movie.movieTitle} \n                    </h1>\n                    <h2>\n                        Director: {movie.director}\n                    </h2>\n                    <h2>\n                        Release Date: {movie.releaseDate}\n                    </h2>\n                    <h2>\n                        Description: {movie.description}\n                    </h2>\n                    <h3>\n                        Movie Reviews\n                    </h3>\n                    <input value={reviewText} onChange={e => setReviewText(e.target.value)} />\n                    <br/>\n                    <button onClick={addNewReview}>\n                        Submit Review\n                    </button>\n                    <br/>\n                    {reviewComponent}\n                </div>\n        </Typography>\n        </CardContent>\n        </Card>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}