{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { Context } from \"../App\"; // http://localhost:3000/home/625fcade9c10f6ba1d10faeb\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieEntry(props) {\n  _s();\n\n  const {\n    username,\n    loggedIn\n  } = useContext(Context);\n  const [movie, setMovie] = useState(undefined);\n  const [reviewText, setReviewText] = useState('');\n  const [curMovieTitle, setCurMovieTitle] = useState('');\n  const [reviewSet, setReviewSet] = useState([]);\n  const params = useParams(); // useEffect(function () {\n  //     Axios.get('/api/user/isLoggedIn')\n  //         .then(response => setUsername(response.data.username))\n  //         .catch(error => console.log(\"User is not logged in\"));\n  // }, [])\n\n  function getReviews() {\n    Axios.get('/api/reviews/getByMovie/' + curMovieTitle).then(function (response) {\n      setReviewSet(response.data);\n    });\n  }\n\n  function addNewReview() {\n    if (loggedIn) {\n      Axios.post('/api/reviews', {\n        reviewText,\n        username,\n        curMovieTitle\n      }).then(response => {\n        console.log(\"Added review\");\n        console.log(response.data);\n      }).catch(error => console.log(error));\n    } else {\n      console.log(\"User must be logged in to submit review\");\n    }\n  }\n\n  useEffect(() => {\n    Axios.get('/api/movies/movieID/' + params.movieId).then(function (response) {\n      setMovie(response.data);\n      setCurMovieTitle(movie.movieTitle);\n    });\n  }, []);\n  useEffect(getReviews, []);\n  const reviewComponent = [];\n\n  for (let review of reviewSet) {\n    reviewComponent.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: review.reviewText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }, this));\n  }\n\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Movie loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Image will be displayed here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Movie Title: \", movie.movieTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Director: \", movie.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Release Date: \", movie.releaseDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Description: \", movie.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Movie Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: reviewText,\n      onChange: e => setReviewText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewReview,\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), reviewComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieEntry, \"+R+9YOukbXe4sV1/b8AqbzYNYRU=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieEntry\");","map":{"version":3,"sources":["/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx"],"names":["Axios","React","useState","useEffect","useContext","useParams","useNavigate","Context","MovieEntry","props","username","loggedIn","movie","setMovie","undefined","reviewText","setReviewText","curMovieTitle","setCurMovieTitle","reviewSet","setReviewSet","params","getReviews","get","then","response","data","addNewReview","post","console","log","catch","error","movieId","movieTitle","reviewComponent","review","push","director","releaseDate","description","e","target","value"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { Context } from \"../App\";\n\n\n// http://localhost:3000/home/625fcade9c10f6ba1d10faeb\nexport default function MovieEntry(props) {\n\n    const {username, loggedIn} = useContext(Context);\n    const [movie, setMovie] = useState(undefined);\n    const [reviewText, setReviewText] = useState('');\n    const [curMovieTitle, setCurMovieTitle] = useState('');\n    const [reviewSet, setReviewSet] = useState([]);\n\n    const params = useParams();\n\n    // useEffect(function () {\n    //     Axios.get('/api/user/isLoggedIn')\n    //         .then(response => setUsername(response.data.username))\n    //         .catch(error => console.log(\"User is not logged in\"));\n    // }, [])\n\n    function getReviews() {\n        Axios.get('/api/reviews/getByMovie/' + curMovieTitle)\n            .then(function (response) {\n                setReviewSet(response.data);\n            })\n    }\n\n    function addNewReview() {\n        if (loggedIn) {\n            Axios.post('/api/reviews', {reviewText, username, curMovieTitle})\n                .then(response => {\n                    console.log(\"Added review\");\n                    console.log(response.data);\n                })\n                .catch(error => console.log(error));\n        } else {\n            console.log(\"User must be logged in to submit review\");\n        }\n    }\n\n    useEffect(() => {\n        Axios.get('/api/movies/movieID/' + params.movieId)\n            .then(function(response) {\n            setMovie(response.data);\n            setCurMovieTitle(movie.movieTitle);\n            })\n    },[]);\n\n    useEffect(getReviews, []);\n    const reviewComponent = [];\n    for (let review of reviewSet) {\n        reviewComponent.push(<div>\n            <h1>{review.reviewText}</h1>\n        </div>)\n\n    }\n\n    if (!movie) {\n        return (<div>\n            Movie loading...\n        </div>)\n    }\n\n    return (\n        <div>\n            <h2>\n                Movie Image will be displayed here\n            </h2>\n            <h1>\n                Movie Title: {movie.movieTitle} \n            </h1>\n            <h2>\n                Director: {movie.director}\n            </h2>\n            <h2>\n                Release Date: {movie.releaseDate}\n            </h2>\n            <h2>\n                Description: {movie.description}\n            </h2>\n            <h3>\n                Movie Reviews\n            </h3>\n            <input value={reviewText} onChange={e => setReviewText(e.target.value)} />\n            <br/>\n            <button onClick={addNewReview}>\n                Submit Review\n            </button>\n            <br/>\n            {reviewComponent}\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}