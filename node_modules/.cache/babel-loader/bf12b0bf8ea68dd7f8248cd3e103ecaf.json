{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography'; // http://localhost:3000/home/625fcade9c10f6ba1d10faeb\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieEntry(props) {\n  _s();\n\n  const [movie, setMovie] = useState(undefined); // const [review, setReview] = useState('');\n\n  const [reviewSet, setReviewSet] = useState([]);\n  const params = useParams();\n\n  function getReviews() {\n    Axios.get('/api/reviews' + movie.movieTitle).then(function (response) {\n      setReviewSet(response.data);\n    });\n  }\n\n  function addNewReview() {\n    Axios.post('/api/reviews', {\n      reviewText,\n      owner,\n      movieName\n    }).then(response => {\n      console.log(\"Added review\");\n      console.log(response.data);\n      navigate('/home');\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    Axios.get('/api/movies/' + params.movieId).then(function (response) {\n      setMovie(response.data);\n    });\n  }, []);\n  useEffect(getReviews, []);\n  const reviewComponent = [];\n\n  for (let review of reviews) {\n    movieComponent.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: '/movie/' + movie._id,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movie.movieTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Director: \", movie.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }, this));\n  }\n\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Movie loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Movie Image will be displayed here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Movie Title: \", movie.movieTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Director: \", movie.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Release Date: \", movie.releaseDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Description: \", movie.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Movie Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: reviewText,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewReview,\n            children: \"Add Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), reviewComponent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieEntry, \"Wu1Y2rmKyFLaF/uvGBJWp2G//MQ=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieEntry\");","map":{"version":3,"sources":["/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx"],"names":["Axios","React","useState","useEffect","useParams","Card","CardContent","Typography","MovieEntry","props","movie","setMovie","undefined","reviewSet","setReviewSet","params","getReviews","get","movieTitle","then","response","data","addNewReview","post","reviewText","owner","movieName","console","log","navigate","catch","error","movieId","reviewComponent","review","reviews","movieComponent","push","_id","director","releaseDate","description","e","setDescription","target","value"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\n// http://localhost:3000/home/625fcade9c10f6ba1d10faeb\nexport default function MovieEntry(props) {\n\n    const [movie, setMovie] = useState(undefined);\n    // const [review, setReview] = useState('');\n    const [reviewSet, setReviewSet] = useState([]);\n\n    const params = useParams();\n\n    function getReviews() {\n        Axios.get('/api/reviews' + movie.movieTitle)\n            .then(function (response) {\n                setReviewSet(response.data);\n            })\n    }\n\n    function addNewReview() {\n        Axios.post('/api/reviews', {reviewText, owner, movieName})\n            .then(response => {\n                console.log(\"Added review\");\n                console.log(response.data);\n                navigate('/home');\n\n            })\n            .catch(error => console.log(error));\n    }\n\n    useEffect(() => {\n        Axios.get('/api/movies/' + params.movieId)\n            .then(function(response) {\n            setMovie(response.data);\n            })\n    },[]);\n\n    useEffect(getReviews, []);\n    const reviewComponent = [];\n    for (let review of reviews) {\n        movieComponent.push(<div>\n            <a href={'/movie/' + movie._id}><h1>{movie.movieTitle}</h1></a>\n\n            <h1>Director: {movie.director}</h1>\n        </div>)\n\n    }\n\n    if (!movie) {\n        return (<div>\n            Movie loading...\n        </div>)\n    }\n\n    return (\n    <Card>\n        <CardContent>\n        <Typography>\n        <div>\n            <h2>\n                Movie Image will be displayed here\n            </h2>\n            <h1>\n                Movie Title: {movie.movieTitle} \n            </h1>\n            <h2>\n                Director: {movie.director}\n            </h2>\n            <h2>\n                Release Date: {movie.releaseDate}\n            </h2>\n            <h2>\n                Description: {movie.description}\n            </h2>\n            <h3>\n                Movie Reviews\n            </h3>\n            <input value={reviewText} onChange={e => setDescription(e.target.value)} />\n            <br/>\n            <button onClick={addNewReview}>\n                Add Movie\n            </button>\n            <br/>\n            {reviewComponent}\n        </div>\n        </Typography>\n        </CardContent>\n    </Card>\n    )\n}"]},"metadata":{},"sourceType":"module"}