{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { Context } from \"../App.jsx\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button'; // import { useAlert } from 'react-alert';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieEntry(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    username,\n    setUsername,\n    loggedIn,\n    setLoggedIn\n  } = useContext(Context);\n  const [movie, setMovie] = useState();\n  const [reviewText, setReviewText] = useState('');\n  const [curMovieTitle, setCurMovieTitle] = useState('');\n  const [reviewSet, setReviewSet] = useState([]);\n  const [showEdit, setShowEdit] = useState(false);\n  const reviewComponent = [];\n  const params = useParams(); // const alert = useAlert();\n\n  useEffect(() => {\n    Axios.get('http://localhost:8000/api/movies/movieID/' + params.movieId).then(function (response) {\n      setMovie(response.data);\n      setCurMovieTitle(response.data.movieTitle);\n      console.log(response.data.movieTitle);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"movie state changed\");\n    getReviews();\n  }, [curMovieTitle]);\n\n  function getReviews() {\n    Axios.get('http://localhost:8000/api/reviews/getByMovie/' + curMovieTitle).then(function (response) {\n      setReviewSet(response.data);\n      console.log(\"get\");\n      console.log(response.data);\n    });\n  }\n\n  function addNewReview() {\n    if (loggedIn) {\n      Axios.post('http://localhost:8000/api/reviews', {\n        reviewText,\n        username,\n        curMovieTitle\n      }).then(response => {\n        console.log(\"Added review\");\n        console.log(response.data);\n        navigate('/movie/movieID/' + movie.movieId);\n      }).catch(error => console.log(error));\n    } else {\n      console.log(\"User must be logged in to submit review\");\n    }\n  }\n\n  function deleteReview(e) {\n    if (username === e.target.value) {\n      Axios.delete('http://localhost:8000/api/reviews/' + e.target.id).then(response => {\n        console.log(\"deleted review\");\n        console.log(response.data);\n        navigate('/home');\n      }).catch(error => console.log(error));\n    } else {\n      console.log(\"You are not the owner of this review\");\n    }\n  }\n\n  function editReview(e) {\n    Axios.put('http://localhost:8000/api/reviews/' + e.target.id).then(response => {\n      console.log(\"deleted review\");\n      console.log(response.data);\n      navigate('/home');\n    }).catch(error => console.log(error));\n  }\n\n  function showEditField() {\n    setShowEdit(true);\n  }\n\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Movie loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this);\n  }\n\n  for (let review of reviewSet) {\n    reviewComponent.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reviewer: \", review.owner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Publish Date: \", review.creationDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: review.reviewText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        onClick: deleteReview,\n        value: review.owner,\n        id: review._id,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        onClick: editReview,\n        value: review.owner,\n        id: review._id,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        onClick: editReview,\n        value: review.owner,\n        id: review._id,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Movie Image will be displayed here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Movie Title: \", movie.movieTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Director: \", movie.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Release Date: \", movie.releaseDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Description: \", movie.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Movie Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: reviewText,\n            onChange: e => setReviewText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewReview,\n            children: \"Submit Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), reviewComponent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieEntry, \"iEPt4BeaWkCsusC79yQi7q1N26c=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = MovieEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieEntry\");","map":{"version":3,"sources":["/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/MovieEntry.jsx"],"names":["Axios","React","useState","useEffect","useContext","useCallback","useParams","useNavigate","Context","Card","CardContent","Typography","Button","MovieEntry","props","navigate","username","setUsername","loggedIn","setLoggedIn","movie","setMovie","reviewText","setReviewText","curMovieTitle","setCurMovieTitle","reviewSet","setReviewSet","showEdit","setShowEdit","reviewComponent","params","get","movieId","then","response","data","movieTitle","console","log","getReviews","addNewReview","post","catch","error","deleteReview","e","target","value","delete","id","editReview","put","showEditField","review","push","owner","creationDate","_id","director","releaseDate","description"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { Context } from \"../App.jsx\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n// import { useAlert } from 'react-alert';\n\n\nexport default function MovieEntry(props) {\n\n    const navigate = useNavigate();\n    const {username, setUsername, loggedIn, setLoggedIn} = useContext(Context);\n    const [movie, setMovie] = useState();\n    const [reviewText, setReviewText] = useState('');\n    const [curMovieTitle, setCurMovieTitle] = useState('');\n    const [reviewSet, setReviewSet] = useState([]);\n    const [showEdit, setShowEdit] = useState(false);\n    const reviewComponent = [];\n    const params = useParams();\n    // const alert = useAlert();\n\n    useEffect(() => {\n        Axios.get('http://localhost:8000/api/movies/movieID/' + params.movieId)\n            .then(function(response) {\n            setMovie(response.data);\n            setCurMovieTitle(response.data.movieTitle);\n            console.log(response.data.movieTitle)\n            })\n    }, []);\n\n    useEffect(() => {\n        console.log(\"movie state changed\");\n        getReviews();\n    }, [curMovieTitle])\n\n    function getReviews() {\n        Axios.get('http://localhost:8000/api/reviews/getByMovie/' + curMovieTitle)\n            .then(function (response) {\n                setReviewSet(response.data);\n                console.log(\"get\");\n                console.log(response.data);\n            })\n    }\n\n    function addNewReview() {\n        if (loggedIn) {\n            Axios.post('http://localhost:8000/api/reviews', {reviewText, username, curMovieTitle})\n                .then(response => {\n                    console.log(\"Added review\");\n                    console.log(response.data);\n                    navigate('/movie/movieID/' + movie.movieId);\n                })\n                .catch(error => console.log(error));\n        } else {\n            console.log(\"User must be logged in to submit review\");\n        }\n    }\n\n    function deleteReview(e) {\n        if (username === e.target.value) {\n            Axios.delete('http://localhost:8000/api/reviews/' + e.target.id)\n                .then(response => {\n                    console.log(\"deleted review\");\n                    console.log(response.data);\n                    navigate('/home');\n                })\n                .catch(error => console.log(error));\n        } else {\n            console.log(\"You are not the owner of this review\")\n        }\n    }\n\n    function editReview(e) {\n        \n        Axios.put('http://localhost:8000/api/reviews/' + e.target.id)\n            .then(response => {\n                console.log(\"deleted review\");\n                console.log(response.data);\n                navigate('/home');\n            })\n            .catch(error => console.log(error));\n    }\n\n    function showEditField() {\n        setShowEdit(true);\n    }\n\n    if (!movie) {\n        return (<div>\n            Movie loading...\n        </div>)\n    }\n\n\n    for (let review of reviewSet) {\n        reviewComponent.push(\n        <div>\n            <p>Reviewer: {review.owner}</p>\n            <p>Publish Date: {review.creationDate}</p>\n            <p>{review.reviewText}</p>\n            <Button size='large' onClick={deleteReview} value={review.owner} id={review._id}>\n                Delete\n            </Button>\n            <Button size='large' onClick={editReview} value={review.owner} id={review._id}>\n                Edit\n            </Button>\n            <Button size='large' onClick={editReview} value={review.owner} id={review._id}>\n                Edit\n            </Button>\n            {/* <div>\n                <input type=\"submit\" value={} />\n            { showEdit ? : null}\n            </div> */}\n        </div>\n        )\n    }\n\n\n    return (\n        <Card>\n        <CardContent>\n            <Typography >\n                <div>\n                    <h2>\n                        Movie Image will be displayed here\n                    </h2>\n                    <h1>\n                        Movie Title: {movie.movieTitle} \n                    </h1>\n                    <h2>\n                        Director: {movie.director}\n                    </h2>\n                    <h2>\n                        Release Date: {movie.releaseDate}\n                    </h2>\n                    <h2>\n                        Description: {movie.description}\n                    </h2>\n                    <h3>\n                        Movie Reviews\n                    </h3>\n                    <input value={reviewText} onChange={e => setReviewText(e.target.value)} />\n                    <br/>\n                    <button onClick={addNewReview}>\n                        Submit Review\n                    </button>\n                    <br/>\n                    {reviewComponent}\n                </div>\n        </Typography>\n        </CardContent>\n        </Card>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}