{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { Context } from \"../App\";\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const {\n    setUsername,\n    setPassword,\n    setLoggedIn\n  } = useContext(Context);\n  const [usernameGiven, setUsernameGiven] = useState(\"\");\n  const [passwordGiven, setPasswordGiven] = useState(\"\");\n  const [invalidLogin, setInvalidLogin] = useState(false);\n  const navigate = useNavigate();\n\n  function login() {\n    Axios.post('/api/user/authenticate', {\n      usernameGiven,\n      passwordGiven\n    }).then(response => {\n      if (response) {\n        setLoggedIn(true);\n        setUsername(usernameGiven);\n        setPassword(passwordGiven);\n      }\n    }).then(response => {\n      navigate('/');\n    }).catch(error => {\n      console.log(error);\n      setInvalidLogin(true);\n    });\n  }\n\n  function InvalidMessage() {\n    if (invalidLogin) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Invalid Username or Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      '& > :not(style)': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InvalidMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: 'dense',\n        label: \"Username\",\n        value: usernameGiven,\n        onChange: e => setUsernameGiven(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: 'dense',\n        label: \"Password\",\n        type: \"password\",\n        value: passwordGiven,\n        onChange: e => setPasswordGiven(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"hvrdAtlwY5ex7XKGiy8D+EoqhPo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/christopherlee/Git/CS5610/chris-h-colin-n-chris-l-project3/src/components/Login.jsx"],"names":["React","useState","useContext","Axios","useNavigate","Context","TextField","Box","Button","Typography","Login","props","setUsername","setPassword","setLoggedIn","usernameGiven","setUsernameGiven","passwordGiven","setPasswordGiven","invalidLogin","setInvalidLogin","navigate","login","post","then","response","catch","error","console","log","InvalidMessage","m","width","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport Axios from 'axios';\nimport {useNavigate} from 'react-router';\nimport {Context} from \"../App\";\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nexport default function Login(props) {\n\n    const {setUsername, setPassword, setLoggedIn} = useContext(Context);\n    const [usernameGiven, setUsernameGiven] = useState(\"\");\n    const [passwordGiven, setPasswordGiven] = useState(\"\");\n    const [invalidLogin, setInvalidLogin] = useState(false);\n    const navigate = useNavigate();\n\n\n    function login() {\n        Axios.post('/api/user/authenticate', {usernameGiven, passwordGiven})\n            .then(response => {\n                    if (response) {\n                        setLoggedIn(true);\n                        setUsername(usernameGiven);\n                        setPassword(passwordGiven)\n                    }\n                }\n            )\n            .then(response => {\n                navigate('/');\n            })\n            .catch(error => {\n                console.log(error);\n                setInvalidLogin(true);\n            });\n    }\n\n    function InvalidMessage() {\n        if (invalidLogin) {\n            return <div>Invalid Username or Password</div>\n        }\n    }\n\n    return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n        <div>\n            <Typography variant='h4'>Login</Typography> \n            <InvalidMessage/>\n            <TextField margin={'dense'} label={\"Username\"} value={usernameGiven} onChange={e => setUsernameGiven(e.target.value)}/>\n            <TextField margin={'dense'} label={\"Password\"} type='password' value={passwordGiven} onChange={e => setPasswordGiven(e.target.value)}/>\n            <Button size='large' onClick={login}>\n                Login\n            </Button>\n        </div>\n    </Box>\n\n    )\n\n\n} "]},"metadata":{},"sourceType":"module"}